source('~/Documents/data_analysis/code_and_city/1setup.R', encoding = 'UTF-8')
source('~/Documents/data_analysis/code_and_city/2clean.R', encoding = 'UTF-8')
parking <- read.csv("kmean/parking.csv")
parking <- read.csv("kmean/parking.csv")
office <- read.csv("kmean/office.csv")
residence <-read.csv("kmean/residence.csv")
eat <- read.csv("kmean/eat.csv")
eat
plot(parking$lat,parking$lon)
plot(parking$lat,parking$lon,pch=16,"blue")
plot(parking$lat,parking$lon,pch=16,col="blue")
plot(parking$lat,parking$lon,pch=16,col="blue",alpha=0.5)
c = rgb(102,102,255,alpha=0.3)
c = rgb(102/255,102/255,1,alpha=0.3)
plot(parking$lat,parking$lon,pch=16,col=c)
help(kmeans)
parking_means <- kmeans(parking,4)
parking_means
oarking_means$centers
plot(parking, col = parking_means$cluster)
plot(parking, col = parking_means$cluster,pch=16)
points(parking_means$centers, col = 1:4, pch = 8)
points(parking_means$centers, col = 1:4, pch = 50)
points(parking_means$centers, col = 1:4, pch = 8, cex= 5)
parking_means <- kmeans(parking,5)
plot(parking, col = parking_means$cluster,pch=16)
points(parking_means$centers, col = 1:4, pch = 8, cex= 5)
points(parking_means$centers, col = 1:5, pch = 8, cex= 5)
parking_means <- kmeans(parking,6)
plot(parking, col = parking_means$cluster,pch=16)
points(parking_means$centers, col = 1:6, pch = 8, cex= 5)
install.packages("dbscan", lib="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library(dbscan)
n_centers = 4
help(dbscans)
res <- dbscan(parking,0.05)
res
res$cluster
res <- dbscan(parking,0.5)
res
res <- dbscan(parking,0.005)
res
res <- dbscan(parking,0.01)
res
res <- dbscan(parking,0.02)
res
res$cluster
plot(parking,col=res$cluster)
res <- dbscan(parking,0.01)
plot(parking,col=res$cluster)
n_centers = 4
parking_means <- kmeans(parking,n_centers)
plot(parking, col = parking_means$cluster,pch=16)
points(parking_means$centers, col = 1:n_centers, pch = 8, cex= 5)
parking_means$centers
write.csv(parking_means$centers,"kmean_result/parking.csv",quote=F,row.names=F)
plot(office$lat,office$lon,pch=16,col=c)
n_centers = 5
office_means <- kmeans(office,n_centers)
kmean <- function(data,n_centers,fname) {
plot(data$lat,data$lon,pch=16,col=c)
means <- kmeans(data,n_centers)
plot(data, col = means$cluster,pch=16)
points(means$centers, col = 1:n_centers, pch = 8, cex= 5)
write.csv(means$centers,paste("kmean_result/",fname,".csv",sep=""),quote=F,row.names=F)
}
kmean(parking,4,"parking")
kmean(office,5,"office")
kmean(residence,4,"residence")
kmean(eat,4,"eat")
kmean(eat,5,"eat")
kmean(eat,6,"eat")
kmean(eat,7,"eat")
kmean(eat,6,"eat")
kmean(residence,4,"residence")
kmean(residence,5,"residence")
kmean(residence,6,"residence")
kmean(eat,6,"eat")
kmean(office,5,"office")
kmean(parking,4,"parking")
c_parking <- kmean(parking,4,"parking")
c_office <- kmean(office,5,"office")
c_residence <- kmean(residence,6,"residence")
c_eat <- kmean(eat,6,"eat")
c_parking
kmean <- function(data,n_centers,fname) {
plot(data$lat,data$lon,pch=16,col=c)
means <- kmeans(data,n_centers)
plot(data, col = means$cluster,pch=16)
points(means$centers, col = 1:n_centers, pch = 8, cex= 5)
write.csv(means$centers,paste("kmean_result/",fname,".csv",sep=""),quote=F,row.names=F)
return(means)
}
# run
c_parking <- kmean(parking,4,"parking")
c_office <- kmean(office,5,"office")
c_residence <- kmean(residence,6,"residence")
c_eat <- kmean(eat,6,"eat")
c_parking
plot(c_parking$centers,col="red",pch=16)
plot(c_parking$centers,col="red",xlim=(west,east),ylim=(south,north),pch=16)
plot(c_parking$centers,col="red",xlim=c(west,east),ylim=c(south,north),pch=16)
# boundary
north <- 43.740733
south <- 43.477434
east <- -79.539981
west <- -79.813423
plot(c_parking$centers,col="red",xlim=c(west,east),ylim=c(south,north),pch=16)
c_parking$centers
plot(c_parking$centers,col="red",ylim=c(west,east),xlim=c(south,north),pch=16)
centers
centers <- c_parking$centers
centers
plot(c_parking$centers,col="red",ylim=c(west,east),xlim=c(south,north),pch=16)
centers
kmean <- function(data,n_centers,fname) {
plot(data$lat,data$lon,pch=16,col=c)
means <- kmeans(data,n_centers)
centers <- means$centers
centers <- centers[,c("lon","lat")]
plot(data, col = means$cluster,pch=16)
points(centers, col = 1:n_centers, pch = 8, cex= 5)
write.csv(centers,paste("kmean_result/",fname,".csv",sep=""),quote=F,row.names=F)
return(centers)
}
c_parking <- kmean(parking,4,"parking")
c_office <- kmean(office,5,"office")
c_residence <- kmean(residence,6,"residence")
c_eat <- kmean(eat,6,"eat")
c_parking$centers
c_parking
plot(c_parking,col="red",xlim=c(west,east),ylim=c(south,north),pch=16)
plot(c_parking,col="red",xlim=c(west,east),ylim=c(south,north),pch=16)
plot(c_parking,col="yellow",xlim=c(west,east),ylim=c(south,north),pch=16)
plot(c_office,col="blue",xlim=c(west,east),ylim=c(south,north),pch=16)
plot(c_residence,col="green",xlim=c(west,east),ylim=c(south,north),pch=16)
plot(c_eat$centers,col="red",xlim=c(west,east),ylim=c(south,north),pch=16)
plot(c_parking,col="yellow",xlim=c(west,east),ylim=c(south,north),pch=16)
points(c_office,col="blue",pch=16)
points(c_residence,col="green",pch=16)
pints(c_eat$centers,col="red",pch=16)
points(c_eat$centers,col="red",pch=16)
points(c_eat,col="red",pch=16)
legend(c("parking","office","residence","eat"))
help(legend)
legend("topright",c("parking","office","residence","eat"))
legend("topright",c("parking","office","residence","eat"))
legend("topright",pch=c(16,16), col=c("yellow","blue","green","red"),c("parking","office","residence","eat"))
nrow(c_parking)
airport <- c(-79.64809129999999,43.590213399999996)
points(airport,col="black",pch=15)
airport
plot(c_parking,col="yellow",xlim=c(west,east),ylim=c(south,north),pch=16,cex=2)
points(c_office,col="blue",pch=16,cex=2)
points(c_residence,col="green",pch=16,cex=2)
points(c_eat,col="red",pch=16,cex=2)
points(airport,col="black",pch=15,cex=2)
points(airport,col="red",pch=15,cex=2)
points(airport,col="black",pch=15,cex=2)
points(airport,col="black",pch=16,cex=2)
c(west,east)
c(south,north)
airport
legend("topright",pch=c(16,16),
col=c("yellow","blue","green","red"),
c("parking","office","residence","eat"))
legend("topright",pch=c(16,16),
col=c("yellow","blue","green","red"),
c("parking","office","residence","eat"))
c_parking
airport <- data.frame(lon=-79.64809129999999,lat=43.590213399999996)
airport <- matrix(c(-79.64809129999999,43.590213399999996))
airport
airport <- matrix(c(-79.64809129999999,43.590213399999996),ncol=2)
airport
points(airport,col="black",pch=16,cex=2)
airport <- matrix(c(-79.628520,43.677608),ncol=2)
points(airport,col="black",pch=16,cex=2)
plot(c_parking,col="yellow",xlim=c(west,east),ylim=c(south,north),pch=16,cex=2)
points(c_office,col="blue",pch=16,cex=2)
points(c_residence,col="green",pch=16,cex=2)
points(c_eat,col="red",pch=16,cex=2)
legend("topright",pch=c(16,16),
col=c("yellow","blue","green","red"),
c("parking","office","residence","eat"))
library(ggmap)
qmplot(lat,lon,data=c_parking)
all <- rbind(c_parking,c_office,c_residence,c_eat)
all
all <- data.frame(all)
all
qmplot(lat,lon,data=all)
help(qmplot)
library(gstat)
data(meuse.grid)
coordinates(meuse.grid) <- c("x", "y")
proj4string(meuse.grid) <- CRS("+init=epsg:28992")
meuse.grid <- spTransform(meuse.grid, CRS("+proj=longlat +datum=WGS84"))
install.packages("gstat", lib="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library(gstat)
data(meuse.grid)
coordinates(meuse.grid) <- c("x", "y")
proj4string(meuse.grid) <- CRS("+init=epsg:28992")
meuse.grid <- spTransform(meuse.grid, CRS("+proj=longlat +datum=WGS84"))
data(meuse.grid)
data(meuse)
m_map <- get_map(location = "Mississauga", maptype = "satellite", zoom = 12)
m_map <- get_map(location = "Ontario", maptype = "satellite", zoom = 12)
m_map <- get_map(location = "Mississauga", maptype = "satellite", zoom = 12)
help)get_map
help(get_map)
m_map <- get_map(location = c(43.595423, -79.650824), maptype = "satellite", zoom = 12)
ggmap(m_map, extent = "device") +
geom_point(aes(x = lon, y = lat), colour = "red",
alpha = 0.5, size = 2, data = all)
m_map <- get_map(location = c(43.595423, -79.650824), maptype = "satellite", zoom = 1)
ggmap(m_map, extent = "device") +
geom_point(aes(x = lon, y = lat), colour = "red",
alpha = 0.5, size = 2, data = all)
m_map <- get_map(location = c(43.595423, -79.650824), maptype = "satellite", zoom = 10)
ggmap(m_map, extent = "device") +
geom_point(aes(x = lon, y = lat), colour = "red",
alpha = 0.5, size = 2, data = all)
all
m_map <- get_map(location = c(lat=43.595423, lon=-79.650824), maptype = "satellite", zoom = 10)
ggmap(m_map, extent = "device") +
geom_point(aes(x = lon, y = lat), colour = "red",
alpha = 0.5, size = 2, data = all)
m_map <- get_map(location = c(lat=43.595423, lon=-79.650824), maptype = "satellite", zoom = 15)
ggmap(m_map, extent = "device") +
geom_point(aes(x = lon, y = lat), colour = "red",
alpha = 0.5, size = 2, data = all)
m_map <- get_map(location = c(lat=43.595423, lon=-79.650824), maptype = "satellite", zoom = 12)
ggmap(m_map, extent = "device") +
geom_point(aes(x = lon, y = lat), colour = "red",
alpha = 0.5, size = 2, data = all)
m_map <- get_map(location = c(lat=43.595423, lon=-79.650824), maptype = "satellite", zoom = 11)
ggmap(m_map, extent = "device") +
geom_point(aes(x = lon, y = lat), colour = "red",
alpha = 0.5, size = 2, data = all)
m_map <- get_map(location = c(lat=43.595423, lon=-79.650824), maptype = "satellite", zoom = 11)
ggmap(m_map, extent = "device") +
geom_point(aes(x = lon, y = lat), colour = "red",
alpha = 1, size = 3, data = all)
m_map <- get_map(location = c(lat=43.595423, lon=-79.650824), maptype = "satellite", zoom = 10)
ggmap(m_map, extent = "device") +
geom_point(aes(x = lon, y = lat), colour = "red",
alpha = 1, size = 3, data = all)
m_map <- get_map(location = c(lat=43.595423, lon=-79.650824), zoom = 10)
ggmap(m_map, extent = "device") +
geom_point(aes(x = lon, y = lat), colour = "red",
alpha = 1, size = 3, data = all)
source('~/Documents/data_analysis/code_and_city/Main.R')
source('~/Documents/data_analysis/code_and_city/Main.R')
scores
x
y
toUse <- data.frame(col=c("lon","lat","score"))
score[1,1]
toUse
toUse <- data.frame(colnames=("lon","lat","score"))
toUse <- data.frame(colnames=c("lon","lat","score"))
toUse
help(data.frame)
toUse <- data.frame(lon=NULL,lat=NULL,score=NULL)
toUse
for (i in 1:length(x)) {
for (j in 1:length(y)) {
toUse <- rbind(toUse,c(i,j,scores[i,j]))
}
}
ggmap(m_map, extent = "device") +
)
toUse
ggmap(m_map, extent = "device") +
geom_density2d(data = toUse,
aes(x = lon, y = lat), size = 0.3) + stat_density2d(data = toUse,
aes(x = lon, y = lat, fill = ..level.., alpha = ..level..), size = 0.01,
bins = 16, geom = "polygon") + scale_fill_gradient(low = "green", high = "red") +
scale_alpha(range = c(0, 0.3), guide = FALSE)
ggmap(m_map, extent = "device") +
geom_density2d(data = toUse,
aes(x = lon, y = lat), size = 0.3) + stat_density2d(data = toUse,
aes(x = lon, y = lat, fill = ..level.., alpha = ..level..), size = 0.01,
geom = "polygon") + scale_fill_gradient(low = "green", high = "red") +
scale_alpha(range = c(0, 0.3), guide = FALSE)
toUse
head(toUse)
colnames(toUse) <- c("lon","lat","score")
ggmap(m_map, extent = "device") +
geom_density2d(data = toUse,
aes(x = lon, y = lat), size = 0.3) + stat_density2d(data = toUse,
aes(x = lon, y = lat, fill = ..level.., alpha = ..level..), size = 0.01,
geom = "polygon") + scale_fill_gradient(low = "green", high = "red") +
scale_alpha(range = c(0, 0.3), guide = FALSE)
ggmap(m_map, extent = "device") +
geom_density2d(data = toUse,
aes(x = lon, y = lat), size = 0.7) + stat_density2d(data = toUse,
aes(x = lon, y = lat), size = 0.5,
geom = "polygon") + scale_fill_gradient(low = "green", high = "red") +
scale_alpha(range = c(0, 0.3), guide = FALSE)
ggmap(m_map, extent = "device") +
geom_density2d(data = toUse, aes(x = lon, y = lat), size = 0.7) +
stat_density2d(data = toUse, aes(x = lon, y = lat), size = 0.5, geom = "polygon") +
scale_fill_gradient(low = "green", high = "red")
ggmap(m_map, extent = "device") +
geom_density2d(data = toUse, aes(x = lon, y = lat), size = 0.7) +
stat_density2d(data = toUse, aes(x = lon, y = lat), size = 1, geom = "polygon") +
scale_fill_gradient(low = "green", high = "red")
summary(toUse)
ggmap(m_map, extent = "device") +
geom_density2d(data = toUse, aes(x = lon, y = lat), size = 0.7) +
# stat_density2d(data = toUse, aes(x = lon, y = lat), size = 1, geom = "polygon") +
scale_fill_gradient(low = "green", high = "red")
ggmap(m_map, extent = "device") +
# geom_density2d(data = toUse, aes(x = lon, y = lat), size = 0.7) +
# stat_density2d(data = toUse, aes(x = lon, y = lat), size = 1, geom = "polygon") +
scale_fill_gradient(low = "green", high = "red")
ggmap(m_map, extent = "device") +
geom_density2d(data = toUse, aes(x = lon, y = lat)) +
stat_density2d(data = toUse, aes(x = lon, y = lat), geom = "polygon") +
scale_fill_gradient(low = "green", high = "red")
m_map <- get_map(location = c(lat=43.595423, lon=-79.650824), zoom = 5)
ggmap(m_map, extent = "device") +
geom_density2d(data = toUse, aes(x = lon, y = lat)) +
stat_density2d(data = toUse, aes(x = lon, y = lat), geom = "polygon") +
scale_fill_gradient(low = "green", high = "red")
head(toUse)
toUse <- data.frame(lon=NULL,lat=NULL,score=NULL)
for (i in 1:length(x)) {
for (j in 1:length(y)) {
toUse <- rbind(toUse,c(x[i],y[j],scores[i,j]))
}
}
head(toUse)
colnames(toUse) <- c("lon","lat","score")
m_map <- get_map(location = c(lat=43.595423, lon=-79.650824), zoom = 10)
ggmap(m_map, extent = "device") +
geom_density2d(data = toUse, aes(x = lon, y = lat)) +
stat_density2d(data = toUse, aes(x = lon, y = lat), geom = "polygon") +
scale_fill_gradient(low = "green", high = "red")
m_map <- get_map(location = c(lat=43.595423, lon=-79.650824), zoom = 10)
ggmap(m_map, extent = "device") +
geom_density2d(data = toUse, aes(x = lon, y = lat), size = 0.3) +
stat_density2d(data = toUse, aes(x = lon, y = lat), size = 0.01, geom = "polygon") +
scale_fill_gradient(low = "green", high = "red") +
scale_alpha(range = c(0, 0.3), guide = FALSE)
head(toUse)
ggmap(m_map,extent= "device") +
geom_point(data = toUse, mapping = aes(lon, lat, colour=score), size=4, alpha=0.5, shape=15) +
scale_colour_gradient(low = 'green', high = 'red')
m_map <- get_map(location = c(lat=43.595423, lon=-79.650824), zoom = 10, color="bw")
ggmap(m_map,extent= "device") +
geom_point(data = toUse, mapping = aes(lon, lat, colour=score), size=4, alpha=0.5, shape=15) +
scale_colour_gradient(low = 'green', high = 'red')
m_map <- get_map(location = c(lat=43.595423, lon=-79.650824), zoom = 10, color="bw")
ggmap(m_map,extent= "device") +
geom_point(data = toUse, mapping = aes(lon, lat, colour=score), size=1, alpha=0.5, shape=15) +
scale_colour_gradient(low = 'green', high = 'red')
m_map <- get_map(location = c(lat=43.595423, lon=-79.650824), zoom = 11, color="bw")
ggmap(m_map,extent= "device") +
geom_point(data = toUse, mapping = aes(lon, lat, colour=score), size=1, alpha=0.5, shape=15) +
scale_colour_gradient(low = 'green', high = 'red')
m_map <- get_map(location = c(lat=43.595423, lon=-79.650824), zoom = 10.5, color="bw")
ggmap(m_map,extent= "device") +
geom_point(data = toUse, mapping = aes(lon, lat, colour=score), size=1, alpha=0.5, shape=15) +
scale_colour_gradient(low = 'green', high = 'red')
m_map <- get_map(location = c(lat=43.595423, lon=-79.650824), zoom = 10.5, color="bw")
ggmap(m_map,extent= "device") +
geom_point(data = toUse, mapping = aes(lon, lat, colour=score), size=2, alpha=1, shape=15) +
scale_colour_gradient(low = 'green', high = 'red')
m_map <- get_map(location = c(lat=43.595423, lon=-79.650824), zoom = 10.2, color="bw")
ggmap(m_map,extent= "device") +
geom_point(data = toUse, mapping = aes(lon, lat, colour=score), size=2, alpha=1, shape=15) +
scale_colour_gradient(low = 'green', high = 'red')
m_map <- get_map(location = c(lat=43.595423, lon=-79.650824), zoom = 11, color="bw")
ggmap(m_map,extent= "device") +
geom_point(data = toUse, mapping = aes(lon, lat, colour=score), size=1.5, alpha=1, shape=15) +
scale_colour_gradient(low = 'green', high = 'red')
m_map <- get_map(location = c(lat=43.595423, lon=-79.650824), zoom = 10, color="bw")
ggmap(m_map,extent= "device") +
geom_point(data = toUse, mapping = aes(lon, lat, colour=score), size=1.5, alpha=1, shape=15) +
scale_colour_gradient(low = 'green', high = 'red')
m_map <- get_map(location = c(lat=43.595423, lon=-79.650824), zoom = 10, color="bw")
ggmap(m_map,extent= "device") +
geom_point(data = toUse, mapping = aes(lon, lat, colour=score), size=1, alpha=1, shape=15) +
scale_colour_gradient(low = 'green', high = 'red')
m_map <- get_map(location = c(lat=43.595423, lon=-79.650824), zoom = 10, color="bw")
ggmap(m_map,extent= "device") +
geom_point(data = toUse, mapping = aes(lon, lat, colour=score), size=1, alpha=1, shape=15) +
geom_density2d(data=toUse,mapping = aes(lon, lat, colour=score)) +
scale_colour_gradient(low = 'green', high = 'red')
View(toUse)
toUseHigh <- toUse[toUse$score >= 3,]
m_map <- get_map(location = c(lat=43.595423, lon=-79.650824), zoom = 10, color="bw")
ggmap(m_map,extent= "device") +
geom_point(data = toUse, mapping = aes(lon, lat, colour=score), size=1, alpha=1, shape=15) +
geom_density2d(data = toUseHigh,mapping = aes(lon,lat,colour=score)) +
scale_colour_gradient(low = 'green', high = 'red')
toUseHigh <- toUse[toUse$score >= 2,]
m_map <- get_map(location = c(lat=43.595423, lon=-79.650824), zoom = 10, color="bw")
ggmap(m_map,extent= "device") +
geom_point(data = toUse, mapping = aes(lon, lat, colour=score), size=1, alpha=1, shape=15) +
geom_density2d(data = toUseHigh,mapping = aes(lon,lat,colour=score)) +
scale_colour_gradient(low = 'green', high = 'red')
toUseHigh <- toUse[toUse$score >= 5,]
m_map <- get_map(location = c(lat=43.595423, lon=-79.650824), zoom = 10, color="bw")
ggmap(m_map,extent= "device") +
geom_point(data = toUse, mapping = aes(lon, lat, colour=score), size=1, alpha=1, shape=15) +
geom_density2d(data = toUseHigh,mapping = aes(lon,lat,colour=score)) +
scale_colour_gradient(low = 'green', high = 'red')
toUseHigh <- toUse[toUse$score >= 8,]
m_map <- get_map(location = c(lat=43.595423, lon=-79.650824), zoom = 10, color="bw")
ggmap(m_map,extent= "device") +
geom_point(data = toUse, mapping = aes(lon, lat, colour=score), size=1, alpha=1, shape=15) +
geom_density2d(data = toUseHigh,mapping = aes(lon,lat,colour=score)) +
scale_colour_gradient(low = 'green', high = 'red')
toUseHigh <- toUse[toUse$score >= 10,]
m_map <- get_map(location = c(lat=43.595423, lon=-79.650824), zoom = 10, color="bw")
ggmap(m_map,extent= "device") +
geom_point(data = toUse, mapping = aes(lon, lat, colour=score), size=1, alpha=1, shape=15) +
geom_density2d(data = toUseHigh,mapping = aes(lon,lat,colour=score)) +
scale_colour_gradient(low = 'green', high = 'red')
toUseHigh <- toUse[toUse$score >= 10,]
m_map <- get_map(location = c(lat=43.595423, lon=-79.650824), zoom = 11, color="bw")
ggmap(m_map,extent= "device") +
geom_point(data = toUse, mapping = aes(lon, lat, colour=score), size=1, alpha=1, shape=15) +
geom_density2d(data = toUseHigh,mapping = aes(lon,lat,colour=score)) +
scale_colour_gradient(low = 'green', high = 'red')
toUseHigh <- toUse[toUse$score >= 8,]
m_map <- get_map(location = c(lat=43.595423, lon=-79.650824), zoom = 11, color="bw")
ggmap(m_map,extent= "device") +
geom_point(data = toUse, mapping = aes(lon, lat, colour=score), size=1, alpha=1, shape=15) +
geom_density2d(data = toUseHigh,mapping = aes(lon,lat,colour=score)) +
scale_colour_gradient(low = 'green', high = 'red')
toUseHigh <- toUse[toUse$score >= 8,]
m_map <- get_map(location = c(lat=43.595423, lon=-79.650824), zoom = 11, color="bw")
ggmap(m_map,extent= "device") +
geom_point(data = toUseHigh, mapping = aes(lon, lat, colour=score), size=1, alpha=1, shape=15) +
geom_density2d(data = toUseHigh,mapping = aes(lon,lat,colour=score)) +
scale_colour_gradient(low = 'green', high = 'red')
toUseHigh <- toUse[toUse$score >= 6,]
m_map <- get_map(location = c(lat=43.595423, lon=-79.650824), zoom = 11, color="bw")
ggmap(m_map,extent= "device") +
geom_point(data = toUseHigh, mapping = aes(lon, lat, colour=score), size=1, alpha=1, shape=15) +
geom_density2d(data = toUseHigh,mapping = aes(lon,lat,colour=score)) +
scale_colour_gradient(low = 'green', high = 'red')
toUseHigh <- toUse[toUse$score >= 8,]
m_map <- get_map(location = c(lat=43.595423, lon=-79.650824), zoom = 11, color="bw")
ggmap(m_map,extent= "device") +
geom_point(data = toUseHigh, mapping = aes(lon, lat, colour=score), size=1, alpha=1, shape=15) +
geom_density2d(data = toUseHigh,mapping = aes(lon,lat,colour=score)) +
scale_colour_gradient(low = 'green', high = 'red')
toUseHigh <- toUse[toUse$score >= 7,]
m_map <- get_map(location = c(lat=43.595423, lon=-79.650824), zoom = 11, color="bw")
ggmap(m_map,extent= "device") +
geom_point(data = toUseHigh, mapping = aes(lon, lat, colour=score), size=1, alpha=1, shape=15) +
geom_density2d(data = toUseHigh,mapping = aes(lon,lat,colour=score)) +
scale_colour_gradient(low = 'green', high = 'red')
toUseHigh <- toUse[toUse$score >= 8,]
m_map <- get_map(location = c(lat=43.595423, lon=-79.650824), zoom = 11, color="bw")
ggmap(m_map,extent= "device") +
geom_point(data = toUseHigh, mapping = aes(lon, lat, colour=score), size=1, alpha=1, shape=15) +
geom_density2d(data = toUseHigh,mapping = aes(lon,lat,colour=score)) +
scale_colour_gradient(low = 'green', high = 'red')
w_map <- get_map(location = "Waterloo, Ontario", zoom = 11, color="bw")
w_map <- get_map(location = "N2T 1L1", zoom = 11, color="bw")
w_map <- get_map(location = c(43.464710, -80.554726), zoom = 11, color="bw")
ggmap(w_map,extent= "device")
c_parking <- kmean(parking,4,"parking")
c_office <- kmean(office,5,"office")
c_residence <- kmean(residence,6,"residence")
c_eat <- kmean(eat,6,"eat")
# kmean function
kmean <- function(data,n_centers,fname) {
plot(data$lat,data$lon,pch=16,col=c)
means <- kmeans(data,n_centers)
centers <- means$centers
centers <- centers[,c("lon","lat")]
plot(data, col = means$cluster,pch=16,main=fname)
points(centers, col = 1:n_centers, pch = 8, cex= 5)
# write.csv(centers,paste("kmean_result/",fname,".csv",sep=""),quote=F,row.names=F)
return(centers)
}
# run
c_parking <- kmean(parking,4,"parking")
c_office <- kmean(office,5,"office")
c_residence <- kmean(residence,6,"residence")
c_eat <- kmean(eat,6,"eat")
centers
parking
office
kmean <- function(data,n_centers,fname) {
data <- data[,c("lon","lat")]
plot(data$lat,data$lon,pch=16,col=c)
means <- kmeans(data,n_centers)
centers <- means$centers
centers <- centers[,c("lon","lat")]
plot(data, col = means$cluster,pch=16,main=fname)
points(centers, col = 1:n_centers, pch = 8, cex= 5)
# write.csv(centers,paste("kmean_result/",fname,".csv",sep=""),quote=F,row.names=F)
return(centers)
}
# run
c_parking <- kmean(parking,4,"parking")
c_office <- kmean(office,5,"office")
c_residence <- kmean(residence,6,"residence")
c_eat <- kmean(eat,6,"eat")
c_parking <- kmean(parking,4,"Parking")
c_office <- kmean(office,5,"Office")
c_residence <- kmean(residence,6,"Residence")
c_eat <- kmean(eat,6,"Eateries")
